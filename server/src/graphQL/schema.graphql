scalar Date
scalar Number

type Query {
  hello: String
  gadgets(_id: String, email: String, name: String): [Gadget]
  gadget(_id: String, email: String, name: String): Gadget
  users(_id: String, email: String, name: String): [User]
  user(_id: String, email: String, name: String): User
}

type Gadget {
  _id: ID!
  name: String!
  release_date: String!
  by_company: String
  price: String
}

type User {
  _id: ID!
  name: String
  email: String
  password: String
}

type UserGadget {
  _id: ID!
  user: User
  gadget: Gadget
}

type AuthData {
  user: User
  token: String
}

type Mutation {
  signUp(name: String!, password: String!, email: String!): AuthData
  login(email: String!, password: String!): AuthData
  gadgetCreate(
    name: String!
    release_date: Date!
    by_company: String!
    price: Number!
  ): Gadget
  gadgetBuy(gadgetId: String): [UserGadget]
}

type Subscription {
  newUser: User
  newGadget: Gadget
}
